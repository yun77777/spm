<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.mall.mng.serviceImpl.mngMapper">
	<select id="category" resultType="com.mall.vo.CategoryVO">
		select
			cateName, cateCode, cateCodeRef
		from goods_category
<!-- 	    	start with cateCodeRef is null connect by prior cateCode = cateCodeRef
 -->	</select>
 	<sql id="searchOption">
		<!-- <if test="searchStartDate != ''.toString() and searchStartDate != null and searchEndDate != ''.toString() and searchEndDate != null">
		AND date_format(B.input_dt,'%Y-%m-%d') BETWEEN #{searchStartDate} AND #{searchEndDate}
		
		</if>
		<if test="searchTitle != ''.toString() and searchTitle != null">
			AND B.title LIKE CONCAT('%',TRIM(#{searchTitle}),'%')
		</if> -->
		<if test="searchId != ''.toString() and searchId != null">
			AND ((g.gdsName LIKE CONCAT('%',TRIM(#{searchId}),'%'))
			OR (g.gdsNum LIKE CONCAT('%',TRIM(#{searchId}),'%')))
		</if>
	</sql>
	<sql id="custmoerSearchOption">
		<!-- <if test="searchStartDate != ''.toString() and searchStartDate != null and searchEndDate != ''.toString() and searchEndDate != null">
		AND date_format(B.input_dt,'%Y-%m-%d') BETWEEN #{searchStartDate} AND #{searchEndDate}
		
		</if>
		<if test="searchTitle != ''.toString() and searchTitle != null">
			AND B.title LIKE CONCAT('%',TRIM(#{searchTitle}),'%')
		</if> -->
		<if test="searchId != ''.toString() and searchId != null">
			AND ((M.ID LIKE CONCAT('%',TRIM(#{searchId}),'%'))
			OR (M.NAME LIKE CONCAT('%',TRIM(#{searchId}),'%')))
		</if>
	</sql>
	<insert id="register" parameterType="map">
	<!-- <selectKey resultType="int" keyProperty="gdsNum" order="BEFORE">
		SELECT COALESCE(MAX(gdsNum),0)+1 AS gdsNum FROM tbl_goods
	</selectKey> -->
		insert into tbl_goods (
				gdsNum
				, gdsName
				, cateCode1
				, cateCode2
				, gdsPrice
				, gdsStock
				, gdsDes
				, gdsImg
				, gdsThumbImg
			)
	   		values (
		   		#{gdsNum}
		   		, #{gdsName}
		   		, #{cateCode1} 
		   		, #{cateCode2} 
		   		, #{gdsPrice}
		   		, #{gdsStock}
		   		, #{gdsDes}
		   		, #{gdsImg}
		   		, #{gdsThumbImg}
	   		)
	</insert>
	<select id="selectItemList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
<!-- 	<if test="PAGE_TYPE!='main'">
 -->		<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
<!-- 	</if>
 --> 	SELECT @rownum:=@rownum+1 ROWNUM
	 	, g.gdsNum
	 	, g.gdsName
	 	, g.cateCode1
	 	, g.cateCode2
	 	, g.gdsPrice
	 	, g.gdsStock
	 	, g.gdsDes
	 	, g.gdsImg
	 	, g.gdsThumbImg
	 	, (SELECT NAME FROM COMMON_TBL WHERE g.cateCode1=CID) cateCode
	 	,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=g.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=g.gdsNum)) representative_file
	 	,(SELECT FILE_PATH FROM MP_FILE WHERE BNO=g.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=g.gdsNum)) file_src
	 	,(SELECT SEQ_MP_FILE_NO FROM MP_FILE WHERE BNO=g.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=g.gdsNum)) file_no
		FROM tbl_goods g,(SELECT @rownum:=0) R
		where g.gdsNum>=0
		<include refid="searchOption"/>
 		ORDER BY g.gdsNum DESC
		<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
	</select>
	
	
	<select id="selectItemMainList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
<!-- 	<if test="PAGE_TYPE!='main'">
 -->		<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
<!-- 	</if>
 --> 	SELECT @rownum:=@rownum+1 ROWNUM
	 	, B.gdsNum
	 	, B.gdsName
	 	, B.cateCode1
	 	, B.cateCode2
	 	, B.gdsPrice
	 	, B.gdsStock
	 	, B.gdsDes
	 	, B.gdsImg
	 	, B.gdsThumbImg
	 	, (SELECT NAME FROM COMMON_TBL WHERE B.cateCode1=CID) cateCode
	 	,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=B.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=B.gdsNum)) representative_file
	 	,(SELECT FILE_PATH FROM MP_FILE WHERE BNO=B.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=B.gdsNum)) file_src
	 	,(SELECT SEQ_MP_FILE_NO FROM MP_FILE WHERE BNO=B.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=B.gdsNum)) file_no
		FROM tbl_goods B,(SELECT @rownum:=0) R
		where B.gdsNum>=0 and B.cateCode1=#{cateCode1}
<!-- 		<include refid="searchOption"/>
 -->		ORDER BY B.gdsNum DESC
		<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
	</select>
	
	
	
	
	<select id="selectItemListCnt" parameterType="map"
		resultType="Integer">
			SELECT COUNT(1) CNT
		FROM (
			SELECT g.gdsNum
		
		FROM tbl_goods g
		where g.gdsNum>=0
		<include refid="searchOption"/>
		ORDER BY g.gdsNum DESC
		) g
	</select>
	
	<select id="selectItemDetail" parameterType="map"
		resultType="map">
		SELECT @rownum:=@rownum+1 ROWNUM
	 	, B.gdsNum
	 	, B.gdsName
	 	, B.cateCode1
	 	, B.cateCode2
	 	<!-- , CT.DESCRPT
	 	, CT.S_CATEGORY -->
	 	, B.gdsPrice
	 	, B.gdsStock
	 	, B.gdsDes
	 	, B.gdsImg
	 	, B.gdsThumbImg
	 	,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=B.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=B.gdsNum)) representative_file
	 	<!-- , MF.ORG_FILE_NAME file
	 	, MF.FILE_PATH file_src
	 	, MF.SEQ_MP_FILE_NO file_no -->
		FROM tbl_goods B,(SELECT @rownum:=0) R
		<!-- LEFT OUTER JOIN COMMN_TBL CT
		ON CT.L_CATEGORY=B.cateCode -->
		<!-- left outer join MP_FILE MF
		on MF.BNO=#{gdsNum} -->
		where B.gdsNum=#{gdsNum}
	</select>
	
	<select id="selectItemImgList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
 	SELECT @rownum:=@rownum+1 ROWNUM
	 	, B.gdsNum
	 	, B.gdsName
	 	, B.cateCode1
	 	, B.cateCode2
	 	, B.gdsPrice
	 	, B.gdsStock
	 	, B.gdsDes
	 	, B.gdsImg
	 	, B.gdsThumbImg
	 	, MF.ORG_FILE_NAME file
	 	, MF.FILE_PATH file_src
	 	, MF.SEQ_MP_FILE_NO
	 	, MF.FILE_NO file_no
	 	, MF.DEL_GB
		FROM tbl_goods B,(SELECT @rownum:=0) R
		left outer join MP_FILE MF
		on MF.BNO=#{gdsNum}
		where B.gdsNum=#{gdsNum}
		and MF.DEL_GB='N'
	</select>
	
	<select id="selectItemListMaxNo" parameterType="map"
		resultType="Integer">
			SELECT max(gdsNum) FROM tbl_goods
	</select>
	
	<delete id="deleteItem" parameterType="map">
 	delete from tbl_goods
 		where gdsNum=#{gdsNum}
	</delete>
	
	<insert id="updateItem" >
		update tbl_goods 
		set 
			gdsNum=#{gdsNum}
			, gdsName=#{gdsName}
			, cateCode1=#{cateCode1}
			, cateCode2=#{cateCode2}
			, gdsPrice=#{gdsPrice}
			, gdsStock=#{gdsStock}
			, gdsDes=#{gdsDes}
			, gdsImg=#{gdsImg}
			, gdsThumbImg=#{gdsThumbImg}
		where gdsNum=#{no}
<!-- 		where gdsNum=#{gdsNum} -->
	</insert>
	
	<select id="selectCommonCodes" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
		<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
 	SELECT
 		CID
 		, NAME
 		, DESCRPT
 		, L_CATEGORY
 		, S_CATEGORY
		FROM COMMON_TBL
		<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
	</select>
	
	<select id="selectCommonCodesCnt" parameterType="map"
		resultType="Integer">
			SELECT COUNT(1) CNT
		FROM (
			SELECT B.CID
		
		FROM COMMON_TBL B
		where B.CID>=0
		ORDER BY B.CID DESC
		<!-- <include refid="searchOption"/> -->
		) B
	</select>
	
	<insert id="insertCommonCodes" parameterType="map">
		<!-- insert into COMMON_TBL (
				CID
				, L_CATEGORY
				, S_CATEGORY
				, NAME
				, DESCRPT
			)
	   		values (
		   		#{CID}
		   		, #{L_CATEGORY}
		   		, #{S_CATEGORY}
		   		, #{NAME}
		   		, #{DESCRPT}
	   		) -->
  		INSERT INTO COMMON_TBL(
	   	  CID
				, L_CATEGORY
				, S_CATEGORY
				, NAME
				, DESCRPT
		) VALUES(
			#{CID}
		   		, #{L_CATEGORY}
		   		, #{S_CATEGORY}
		   		, #{NAME}
		   		, #{DESCRPT}
		)
		ON DUPLICATE KEY UPDATE
		CID = #{CID}
		, L_CATEGORY = #{L_CATEGORY, jdbcType=VARCHAR}
		, S_CATEGORY = #{S_CATEGORY, jdbcType=VARCHAR}
		, NAME = #{NAME, jdbcType=VARCHAR}
		, DESCRPT = #{DESCRPT}
	</insert>
	
	<update id="updateCommonCodes" parameterType="java.util.HashMap">
 	update COMMON_TBL set
 		NAME=#{NAME}
 		, DESCRPT=#{DESCRPT}
 		, L_CATEGORY=#{L_CATEGORY}
 		, S_CATEGORY=#{S_CATEGORY}
		where CID=#{CID}
	</update>
	
	<delete id="deleteCommonCodes" parameterType="map">
 	delete from COMMON_TBL
 		where CID=#{CID}
	</delete>
	
	<select id="selectCommonCodesMaxNo" parameterType="map"
		resultType="Integer">
			SELECT max(CID) FROM COMMON_TBL
	</select>
	
	<select id="selectCategoryCode" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
 	SELECT
 		CID
 		, NAME
 		, DESCRPT
 		, L_CATEGORY
 		, S_CATEGORY
	FROM COMMON_TBL
	WHERE L_CATEGORY=#{L_CATEGORY}
	</select>
	
	<select id="selectCategorySCode" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
 	SELECT
 		CID
 		, NAME
 		, DESCRPT
 		, L_CATEGORY
 		, S_CATEGORY
	FROM COMMON_TBL
	WHERE S_CATEGORY=#{S_CATEGORY} and L_CATEGORY !='L'
	</select>
	
	
	
	 <select id="selectOrderList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
	<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
 		select 
		    o.orderId, o.userId, o.orderRec,
		    o.userAddr1, o.userAddr2, o.userAddr3,
		    o.orderPhon, o.amount
		    , SUBSTRING(o.orderDate,1,10) orderDate
		    , od.cartStock
		    , g.gdsName
		    , g.gdsNum
		    , b.cnt
		    , (CASE
		    	WHEN o.delivery='D1' THEN '주문완료'
		    	WHEN o.delivery='D2' THEN '발송'
		    	WHEN o.delivery='D3' THEN '취소'
		    	ELSE ''
	    		END) delivery
    	 	,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=od.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=od.gdsNum)) representative_file
		from tbl_order o
		left outer join tbl_order_details od
		on od.orderId=o.orderId
		left outer join tbl_goods g
		on od.gdsNum=g.gdsNum
		left outer join (SELECT orderId, COUNT(*) AS cnt FROM tbl_order_details GROUP BY orderId) b
        on b.orderId=o.orderId
	    where od.orderDetailsNum=(SELECT MIN(a.orderDetailsNum) FROM tbl_order_details a inner join tbl_order b on a.orderId=o.orderId)
		
		<if test="delivery != 'all'">
		and o.delivery=#{delivery}
		</if>
		<include refid="searchOption"/>
		order by o.orderDate desc
	<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
	</select>
	
	<update id="updateOrderState" parameterType="map">
		update tbl_order
		set delivery=#{delivery}
		where orderId=#{orderId}
	</update>
	
	<select id="selectOrderListCnt" parameterType="map"
		resultType="Integer">
			SELECT COUNT(1) CNT
		FROM (
			SELECT o.orderId
		from tbl_order o
		left outer join tbl_order_details od
		on od.orderId=o.orderId
		left outer join tbl_goods g
		on od.gdsNum=g.gdsNum
		left outer join (SELECT orderId, COUNT(*) AS cnt FROM tbl_order_details GROUP BY orderId) b
        on b.orderId=o.orderId
	    where od.orderDetailsNum=(SELECT MIN(a.orderDetailsNum) FROM tbl_order_details a inner join tbl_order b on a.orderId=o.orderId)
		<if test="delivery != 'all'">
		and o.delivery=#{delivery}
		</if>
		<include refid="searchOption"/>
		) o
	</select>
	
	<select id="selectOrderDetail" parameterType="java.util.HashMap"
	resultType="java.util.HashMap">
		 select 
		   o.orderId, o.userId, o.orderRec,
		    o.userAddr1, o.userAddr2, o.userAddr3,
		    o.orderPhon, o.amount, o.orderDate, o.delivery
		    , od.cartStock
            ,od.orderDetailsNum
		    , g.gdsName  
     	 	,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE BNO=od.gdsNum and FILE_NO=(SELECT MIN(FILE_NO) FROM MP_FILE WHERE BNO=od.gdsNum)) representative_file
		    
		from tbl_order_details od
		        inner join tbl_order o
		            on od.orderId = o.orderId
				inner join tbl_goods g
		            on od.gdsNum = g.gdsNum
            where o.orderId=#{orderId}
		
	</select>
	
		
	<select id="selectCustomerList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
	<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
	SELECT @rownum:=@rownum+1 ROWNUM
	 	, M.ID
	 	, M.NAME
	 	, M.input_dt
	FROM member M, (SELECT @rownum:=0) R
	where M.ID IS NOT NULL
	<include refid="custmoerSearchOption"/>
	<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
		
	</select>
	
	
	<select id="selectCustomerDetail" parameterType="java.util.HashMap"
	resultType="java.util.HashMap">
		 SELECT 
		 M.ID
	 	, M.NAME
	 	, M.ADDRESS
	 	, M.CONTACT
	 	, M.PHONE
	 	, M.EMAIL
	 	, M.INPUT_DT
	FROM member M
	WHERE M.ID=#{userId}
	</select>
	
	
	<delete id="deleteCustomer" parameterType="map">
 	delete from member where ID=#{ID}
	</delete>
	
	<select id="selectCustomerListCnt" parameterType="map"
		resultType="Integer">
			SELECT COUNT(1) CNT
		FROM (
			SELECT M.ID
		FROM member M
		where M.ID IS NOT NULL
		<include refid="custmoerSearchOption"/>
		) M
	</select>
	
	
</mapper>