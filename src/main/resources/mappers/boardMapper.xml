<?xml version="1.0" encoding="UTF-8" ?> 

<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN" "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">

<mapper namespace="com.mall.board.serviceImpl.boardMapper">
	<sql id="searchOption">
		<!-- <if test="searchStartDate != ''.toString() and searchStartDate != null and searchEndDate != ''.toString() and searchEndDate != null">
		AND date_format(B.input_dt,'%Y-%m-%d') BETWEEN #{searchStartDate} AND #{searchEndDate}
		
		</if>
		<if test="searchTitle != ''.toString() and searchTitle != null">
			AND B.title LIKE CONCAT('%',TRIM(#{searchTitle}),'%')
		</if> -->
		<if test="searchId != ''.toString() and searchId != null">
			AND ((B.id LIKE CONCAT('%',TRIM(#{searchId}),'%'))
			OR (B.title LIKE CONCAT('%',TRIM(#{searchId}),'%')))
		</if>
	</sql>
	
	<!-- 게시판 목록 -->
	<select id="selectBoardList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
	<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
 	SELECT @rownum:=@rownum+1 ROWNUM
 	,B.B_NO
		,B.id
		,B.title
		,B.content
		,B.cnt
		,B.B_TYPE
		,(SELECT COUNT(1) FROM tbl_reply WHERE bno=B.B_NO and B_TYPE=B.B_TYPE) RCNT
		, SUBSTRING(B.input_dt,1,10) input_dt
		FROM board B,(SELECT @rownum:=0) R
		where B.B_TYPE=#{B_TYPE}
		<include refid="searchOption"/>
		ORDER BY B.originNo DESC, B.groupOrd ASC 
	<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
	</select>
	
	<select id="selectBoardListCnt" parameterType="map"
		resultType="Integer">
			SELECT COUNT(1) CNT
		FROM (
			SELECT B.B_NO
		
		FROM board B
		where B.B_TYPE=#{B_TYPE}
		<include refid="searchOption"/>
		) B
	</select>
	
	<select id="selectBoardMaxNo" parameterType="map"
		resultType="Integer">
			SELECT max(B_NO) FROM board WHERE B_TYPE=#{B_TYPE}
	</select>
	
	<select id="selectBoardDetail" parameterType="map"
		resultType="map">
		select 
		B.B_NO
		,B.id
		,B.title
		,B.content
		,B.cnt
		,B.input_dt
		,B.updt_dt
		,B.originNo
		,B.groupOrd
		,B.groupLayer
		from board B
		where B.B_NO=#{no} and B.B_TYPE=#{B_TYPE}
	</select>
	
	<update id="updateBoard" parameterType="map">
		update board set
		id=#{id}
		,title=#{title}
		,content=#{content}
		,updt_dt=NOW()
		where B_NO=#{no} and B_TYPE=#{B_TYPE}
	</update>
	
	<update id="updateCnt" parameterType="map">
		update board
		set cnt = cnt+1
		where B_NO=#{no,jdbcType=VARCHAR} AND B_TYPE=#{B_TYPE}
	</update>
	
	<insert id="insertBoard" parameterType="map">
	<selectKey resultType="int" keyProperty="B_NO" order="BEFORE">
		SELECT COALESCE(MAX(B_NO),0)+1 AS B_NO FROM board
		WHERE  B_NO=#{no,jdbcType=VARCHAR} AND B_TYPE=#{B_TYPE}
	</selectKey>
		insert board(
		B_NO
		,id
		,title
		,content
		,input_dt
		,B_TYPE
		
		,originNo
		) values(
		#{B_NO}
		,#{id,jdbcType=VARCHAR}
		,#{title,jdbcType=VARCHAR}
		,#{content,jdbcType=VARCHAR}
		,NOW()
		,#{B_TYPE,jdbcType=VARCHAR}
		
		,#{originNo}
		
		)
	</insert>
	
	<update id="updateReply" parameterType="map">
	update board set groupOrd = groupOrd + 1 
	where originNo = #{originNo} and groupOrd > #{groupOrd}
	</update>
	
	<insert id="insertReply" parameterType="map">
<selectKey resultType="int" keyProperty="groupOrd" order="BEFORE">
		SELECT COALESCE(MAX(groupOrd),0)+1 AS groupOrd FROM board
		WHERE  originNo=#{originNo}
	</selectKey>
		insert board(
		B_NO
		,id
		,title
		,content
		,input_dt
		,B_TYPE
		
		,originNo
		,groupOrd
		,groupLayer
		) values(
		#{B_NO}
		,#{id,jdbcType=VARCHAR}
		,#{title,jdbcType=VARCHAR}
		,#{content,jdbcType=VARCHAR}
		,NOW()
		,#{B_TYPE}
		
		,#{originNo}
		,#{groupOrd}
		,#{groupLayer}
		)
	</insert>
	
	
	<update id="mergeBoard" parameterType="map">
   	  INSERT INTO board(
	   	  B_NO
			,id
			,TITLE
			,content
			,updt_dt
			,B_TYPE
			,originNo
		) VALUES(
			#{no, jdbcType=VARCHAR}
			, #{id, jdbcType=VARCHAR}
			, #{title, jdbcType=VARCHAR}
			, #{content, jdbcType=VARCHAR}
			, NOW()
			, #{B_TYPE}
			, #{no}
		)
		ON DUPLICATE KEY UPDATE
		B_NO = #{no, jdbcType=VARCHAR}
		, id = #{id, jdbcType=VARCHAR}
		, TITLE = #{title, jdbcType=VARCHAR}
		, content = #{content, jdbcType=VARCHAR}
		, updt_dt = NOW()
		, B_TYPE = #{B_TYPE}
		
	</update>
	
	<update id="deleteBoard" parameterType="map">
   	  delete from board where B_NO=#{no,jdbcType=VARCHAR}
	</update>
	
	
	<insert id="insertHisBoard" parameterType="map">
	<selectKey resultType="int" keyProperty="HIS_ID" order="BEFORE">
		SELECT COALESCE(MAX(HIS_ID),0)+1 AS HIS_ID FROM board_h
		where B_NO=#{no,jdbcType=VARCHAR} AND B_TYPE=#{B_TYPE}
	</selectKey>
		insert into board_h(
		HIS_ID
		,B_NO
		,id
		,title
		,content
		,input_dt
		,updt_dt
		,cnt
		,B_TYPE
		<!-- ,originNo -->
		)
		select
		#{HIS_ID,jdbcType=VARCHAR}
		,B_NO
		,id
		,title
		,content
		,input_dt
		,updt_dt
		,cnt
		,B_TYPE
		from board where B_NO=#{no, jdbcType=VARCHAR}
	</insert>
	
	<!-- 게시판 목록 -->
	<select id="selectContent" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
 	SELECT 
 		B.TITLE
 		,B.B_NO
		FROM board B
		WHERE B.B_NO=#{contentNo}
		ORDER BY B.B_NO
	</select>
	
	
	<!-- 이력 업데이트 -->
	<update id="updateHis" parameterType="map">
		<!-- pdate board_h
		set DEL_YN=#{DEL_YN,jdbcType=VARCHAR}
		where no=#{no,jdbcType=VARCHAR} -->
	</update>
	
	<!-- 이력 -->
	<select id="selectBoardHisList" parameterType="java.util.HashMap" resultType="java.util.HashMap">
	 	SELECT
	    B_NO
	    ,TITLE
		 FROM
		    board
		 WHERE
		  B_NO IN (
		    (SELECT B_NO FROM board WHERE B_NO <![CDATA[<]]> #{no} ORDER BY B_NO DESC LIMIT 1),
		    (SELECT B_NO FROM board WHERE B_NO <![CDATA[>]]> #{no} ORDER BY B_NO LIMIT 1)
		   ) and B_TYPE=#{B_TYPE}
	</select>
	
	<insert id="insertFile" parameterType="hashMap">
	<selectKey resultType="int" keyProperty="FILE_NO" order="BEFORE">
		SELECT COALESCE(MAX(FILE_NO),0)+1 AS FILE_NO FROM MP_FILE
	</selectKey>
		INSERT INTO MP_FILE(
			FILE_NO,
			BNO,
			ORG_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE,
<!-- 			SEQ_MP_FILE_NO,
 -->			FILE_PATH,
			B_TYPE,
			DEL_GB
		)VALUES(
			#{FILE_NO},
			#{B_NO},
			#{ORG_FILE_NAME},
			#{STORED_FILE_NAME},
			#{FILE_SIZE},
<!-- 			#{SEQ_MP_FILE_NO},
 -->			#{FILE_PATH},
			#{B_TYPE},
			'N'
			<!-- #{DEL_GB} -->
		)
    </insert>


	<update id="updateFile" parameterType="map">
		UPDATE MP_FILE SET
    	DEL_GB = 'Y'
    	WHERE FILE_NO = #{FILE_NO} and B_TYPE=#{B_TYPE}
	</update>
	
	
    <select id="selectItemList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
			<include refid="com.mall.common.commonMapper.pagingHeaderSql"/>
		
 	SELECT @rownum:=@rownum+1 ROWNUM
 	,B.B_NO
		,B.id
		,B.title
		,B.content
		,B.B_TYPE
		
		<!-- ,(SELECT date_format(input_dt,'%Y-%m-%d') FROM board WHERE no=B.B_NO) input_dt
		,(SELECT date_format(input_dt,'%H:%m:%s') FROM board WHERE no=B.B_NO) input_h -->
        ,IF(date_format(NOW(),'%Y-%m-%d')=date_format(input_dt,'%Y-%m-%d'),(SELECT date_format(input_dt,'%H:%m:%s') FROM board WHERE B_NO=B.B_NO AND B_TYPE=#{B_TYPE}),(SELECT date_format(input_dt,'%Y-%m-%d') FROM board WHERE B_NO=B.B_NO AND B_TYPE=#{B_TYPE})) input_dt
		
		,(SELECT ORG_FILE_NAME FROM MP_FILE WHERE B.B_NO=BNO) file
		,(SELECT FILE_PATH FROM MP_FILE WHERE B.B_NO=BNO) file_src
		,(SELECT SEQ_MP_FILE_NO FROM MP_FILE WHERE B.B_NO=BNO) file_no
		FROM board B,(SELECT @rownum:=0) R
		where B.B_NO>0 AND B.B_TYPE=#{B_TYPE}
		<include refid="searchOption"/>
		ORDER BY B.B_NO DESC
		<include refid="com.mall.common.commonMapper.pagingFooterSql"/>
	</select>
	
	
	
	<select id="selectFile" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
 	SELECT 
			FILE_NO,
			BNO,
			ORG_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE,
			SEQ_MP_FILE_NO,
			FILE_PATH,
			B_TYPE
		FROM MP_FILE
		WHERE FILE_NO=#{FILE_NO} and #{B_TYPE}
	</select>
	
	<delete id="deleteFile" parameterType="map">
   	  delete MP_FILE 
   	  where BNO=#{no, jdbcType=VARCHAR} and B_TYPE=#{B_TYPE}
	</delete>
	
	
	<select id="selectBoardFileList" parameterType="java.util.HashMap"
		resultType="java.util.HashMap">
 	SELECT 
 		FILE_NO,
			BNO,
			ORG_FILE_NAME,
			STORED_FILE_NAME,
			FILE_SIZE,
			SEQ_MP_FILE_NO,
			FILE_PATH,
			B_TYPE
		FROM MP_FILE
		where BNO=#{no} and DEL_GB='N' and B_TYPE=#{B_TYPE}
	</select>
</mapper>